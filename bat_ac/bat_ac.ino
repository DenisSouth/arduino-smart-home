#include <avr/pgmspace.h>
int data;  //for relay
int IRledPin =  3;
unsigned int displayInt;

void setup(){    
  pinMode(12, OUTPUT); //relay
  pinMode(IRledPin, OUTPUT);
  Serial.begin(9600);
}

//RAW buttons data
const  int on_off[] PROGMEM = {9360, 4720,560, 1800,540, 1780,580, 640,540, 620,560, 620,560, 620,560, 620,560, 1800,560, 620,560, 1780,560, 1780,560, 640,560, 620,560, 620,560, 600,580, 640,560, 1780,560, 1780,560, 1780,560, 640,560, 620,560, 620,560, 620,560, 620,560, 640,540, 640,540, 620,560, 640,560, 620,560, 620,560, 1800,540, 1800,560, 640,540, 600,580, 620,560, 620,560, 640,540, 640,540, 640,540, 640,560, 640,540, 620,560, 620,560, 640,540, 640,540, 640,540, 640,540, 640,560, 8340,560, 640,560, 640,520, 640,560, 640,540, 640,540, 640,540, 620,560, 640,560, 620,560, 620,540, 640,560, 640,540, 640,540, 640,540, 620,560, 640,540, 640,560, 640,520, 640,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 620,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,560, 620,560, 620,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,560, 620,540, 660,540, 620,560, 640,540, 640,540, 640,540, 640,540, 660,540, 620,540, 640,560, 620,560, 640,540, 640,540, 640,540, 700,560, 1780,540, 1800,560, 1800,560, 620,560, 620,560, 640,540, 1800,540, 1800,540};

const  int heat32[] PROGMEM =  {9360, 4720,560, 1780,560, 1800,540, 640,540, 640,560, 620,560, 620,560, 620,560, 1800,540, 620,560, 1800,540, 1780,560, 660,540, 620,540, 640,540, 640,540, 620,580, 620,560, 620,560, 620,560, 640,540, 640,540, 640,540, 620,560, 640,560, 620,540, 640,540, 640,540, 660,540, 620,540, 1820,540, 1800,540, 1800,540, 640,560, 620,560, 620,540, 640,560, 620,560, 640,540, 620,560, 640,540, 640,540, 620,560, 640,520, 660,540, 640,540, 640,540, 640,540, 640,540, 8360,540, 640,540, 640,540, 660,520, 660,540, 620,560, 640,540, 620,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 620,560, 620,560, 640,520, 660,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,540, 640,540, 640,560, 620,560, 700,540, 620,540, 640,560, 640,540, 620,560, 640,540, 1800,540, 1800,540, 1820,520};

const  int heat22[] PROGMEM  = {9340, 4740,540, 1780,580, 1760,580, 600,580, 600,600, 580,580, 600,580, 620,560, 1800,560, 620,560, 1780,560, 1780,560, 620,560, 600,580, 620,560, 620,560, 640,560, 1780,560, 1780,560, 600,580, 620,560, 580,600, 600,580, 620,560, 640,560, 580,600, 600,560, 620,560, 640,560, 600,580, 620,560, 1780,560, 640,540, 620,560, 620,560, 600,580, 640,560, 620,560, 600,560, 640,560, 600,580, 600,560, 640,560, 620,560, 620,560, 640,540, 620,560, 620,560, 640,540, 8360,540, 620,560, 620,560, 640,560, 620,540, 640,540, 640,540, 620,580, 620,540, 640,560, 620,560, 620,560, 620,580, 580,580, 620,560, 600,580, 640,540, 640,540, 640,560, 620,560, 620,540, 640,560, 620,560, 620,540, 640,580, 580,580, 620,560, 620,600, 580,560, 620,560, 620,580, 580,580, 620,560, 640,560, 600,560, 600,600, 620,560, 620,540, 640,560, 620,580, 600,540, 640,560, 620,560, 600,560, 640,600, 580,560, 600,560, 620,620, 580,580, 620,520, 660,560, 600,580, 620,540, 640,560, 580,580, 640,560, 680,560, 1780,540, 1780,600, 600,560, 620,540, 640,560, 600,560, 1820,540, 620,580};

const  int heat25[] PROGMEM =  {9360, 4720,580, 1780,540, 1800,560, 620,560, 620,560, 640,560, 600,560, 600,580, 1820,520, 640,540, 1820,520, 1800,560, 640,540, 620,560, 620,560, 600,580, 620,560, 1820,540, 1780,540, 640,540, 640,560, 640,540, 620,560, 620,560, 620,560, 640,560, 600,560, 620,560, 640,540, 1820,540, 1780,560, 1780,560, 640,540, 640,540, 640,540, 620,560, 640,540, 640,540, 620,560, 640,540, 640,540, 660,520, 640,540, 660,520, 640,560, 640,540, 620,560, 640,540, 620,560, 8340,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 620,560, 640,540, 620,540, 660,540, 620,560, 640,540, 640,540, 640,540, 620,560, 640,540, 640,540, 640,540, 640,540, 660,540, 620,540, 660,540, 620,560, 640,540, 620,560, 640,540, 640,540, 640,540, 640,540, 620,560, 640,540, 640,540, 640,540, 640,540, 660,520, 640,540, 660,520, 640,560, 620,560, 620,560, 640,540, 620,560, 620,560, 640,540, 640,540, 620,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 720,540, 1780,560, 1800,540, 620,540, 660,540, 1800,540, 1800,540, 1800,560, 620,560};

const  int cold18[] PROGMEM = {9360, 4720,560, 1780,560, 1780,560, 640,540, 620,560, 660,520, 620,560, 620,560, 1800,560, 620,560, 1780,560, 1760,580, 640,560, 640,540, 620,540, 640,540, 640,560, 1780,580, 1760,560, 620,560, 640,540, 600,580, 660,520, 640,540, 640,560, 600,580, 1780,560, 620,560, 640,540, 640,540, 640,540, 640,540, 640,560, 600,580, 620,560, 620,540, 640,560, 620,560, 620,560, 620,560, 620,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 8360,540, 640,560, 620,560, 640,540, 620,560, 640,540, 620,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,540, 640,540, 640,560, 620,560, 620,540, 640,560, 620,560, 620,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 620,560, 620,560, 620,560, 620,560, 640,540, 620,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,540, 640,560, 620,540, 640,540, 640,560, 620,540, 640,560, 620,540, 640,540, 660,520, 640,560, 640,540, 620,560, 640,540, 700,540, 1800,540, 640,540, 640,540, 640,560, 620,540, 640,560, 620,540, 640,540};

const  int cold23[] PROGMEM = {9360, 4740,560, 1760,560, 1800,560, 600,560, 640,560, 640,540, 620,560, 620,560, 1800,560, 600,580, 1780,560, 1760,580, 620,560, 620,560, 640,540, 620,560, 600,600, 1760,580, 1780,540, 640,540, 640,540, 620,580, 620,560, 600,580, 640,540, 600,600, 1780,560, 580,580, 640,560, 1780,540, 640,560, 1760,580, 640,540, 600,580, 640,540, 640,540, 640,560, 620,560, 620,540, 640,560, 620,560, 620,560, 620,540, 640,560, 640,540, 620,560, 620,560, 600,580, 620,560, 8360,540, 640,560, 620,560, 620,560, 620,560, 600,580, 620,540, 640,560, 620,560, 620,560, 620,560, 620,560, 620,560, 600,580, 600,580, 640,540, 640,540, 620,560, 640,540, 640,540, 640,560, 620,560, 620,560, 620,540, 640,560, 600,580, 620,540, 640,560, 620,560, 620,560, 640,540, 640,540, 640,540, 640,540, 620,560, 640,560, 620,540, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 620,540, 640,560, 620,560, 620,560, 640,540, 640,540, 640,540, 620,580, 620,540, 640,560, 620,560, 620,540, 700,540, 1800,540, 640,560, 620,560, 620,560, 1780,560, 620,560, 1800,540, 640,540};

const int fan[] PROGMEM = {9400, 4700,560, 1800,540, 1760,600, 560,600, 640,540, 640,540, 640,540, 640,540, 1760,620, 620,540, 1780,560, 1800,540, 640,560, 620,560, 600,580, 600,580, 620,560, 1780,560, 1780,580, 620,540, 640,560, 620,560, 600,580, 600,580, 640,540, 620,560, 640,540, 1800,560, 640,540, 620,560, 620,540, 660,540, 1800,540, 640,540, 640,540, 640,540, 620,580, 620,560, 620,560, 620,540, 660,540, 620,560, 640,540, 620,560, 640,540, 640,540, 620,560, 660,520, 640,540, 8360,560, 620,560, 620,540, 640,560, 640,540, 640,540, 620,560, 640,540, 620,580, 620,540, 620,560, 640,560, 620,540, 640,560, 620,540, 640,560, 620,560, 620,560, 620,560, 600,580, 640,540, 640,540, 640,540, 640,540, 640,540, 640,560, 620,560, 600,560, 640,560, 620,560, 620,560, 620,560, 620,560, 620,560, 640,540, 640,540, 620,560, 640,540, 640,540, 620,560, 640,560, 600,580, 620,540, 640,560, 600,560, 660,540, 620,560, 640,540, 620,560, 640,540, 620,560, 640,540, 640,560, 600,560, 620,580, 620,540, 700,540, 1800,560, 1780,560, 1780,560, 640,540, 640,540, 640,540, 640,540, 1800,560};

char incomingByte = 0; 

void loop()    
{
//relay on - a
//relay off - b
//AC on_off - c
//heat32 - d
//heat25 - e
//heat22 - f
//cold18 - g
//cold23 - h
//fan - l

  if (Serial.available() > 0) {
  
    incomingByte = Serial.read();
  
    Serial.print(incomingByte);

        switch (incomingByte) {
      case 'a':
         digitalWrite(12, HIGH); 
        break;
      case 'b':
        digitalWrite(12, LOW);
        break;
      case 'c':
        send_data(on_off, sizeof(on_off) / sizeof(on_off[0]));
        break;
      case 'd':
        send_data(heat32, sizeof(heat32) / sizeof(heat32[0]));
        break;
      case 'e':
        send_data(heat25, sizeof(heat25) / sizeof(heat25[0]));
        break;
      case 'f':
        send_data(heat22, sizeof(heat22) / sizeof(heat22[0]));
        break;   
      case 'g':
        send_data(cold18, sizeof(cold18) / sizeof(cold18[0]));
        break;   
      case 'h':
        send_data(cold23, sizeof(cold23) / sizeof(cold23[0]));
        break;   
      case 'l':
        send_data(fan, sizeof(fan) / sizeof(fan[0]));
        break;   
    }
  }
}
 
void pulse(long microsecs) {
  cli();
  while (microsecs > 0) 
  { // 38 kHz is about 13 microseconds high and 13 microseconds low
   digitalWrite(IRledPin, HIGH);  // this takes about 3 microseconds to happen
   delayMicroseconds(10);         // hang out for 10 microseconds, you can also change this to 9 if its not working
   digitalWrite(IRledPin, LOW);   // this also takes about 3 microseconds
   delayMicroseconds(10);         // hang out for 10 microseconds, you can also change this to 9 if its not working
   microsecs -= 26;   // so 26 microseconds altogether
  } sei();
}

//send data by IR
void send_data(int IRsignal[], int size){

   for (int k = 0; k < size; k=k+2)
  {
    pulse(pgm_read_word_near(IRsignal + k));
    delayMicroseconds(pgm_read_word_near(IRsignal + k+1));
  };
 }
